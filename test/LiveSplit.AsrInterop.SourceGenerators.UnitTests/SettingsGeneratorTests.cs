using System.Text;
using System.Threading.Tasks;

using Microsoft.CodeAnalysis.Text;

using Xunit;

using VerifyCs = LiveSplit.AsrInterop.SourceGenerators.UnitTests.CSharpIncrementalGeneratorVerifier<
    LiveSplit.AsrInterop.SourceGenerators.SettingsGenerator>;

namespace LiveSplit.AsrInterop.SourceGenerators.UnitTests;

public sealed class SettingsGeneratorTests
{
    [Fact]
    public async Task Should_Generate_Settings()
    {
        string @class = "TestSettings";
        string @namespace = "SettingsTests";
        string fullName = $"{@namespace}.{@class}";

        string source = $$"""
            namespace {{@namespace}};

            [{{SettingsGenerator.AttributeMetadataName}}]
            public partial class {{@class}}
            {
                [LiveSplit.AsrInterop.Settings.ToggleAttribute("key")]
                public bool TestToggle { get; }
            }
            """;

        string expected = $$"""
            // <auto-generated />

            namespace {{@namespace}} {
                partial class {{@class}} : LiveSplit.AsrInterop.IAutosplitterSettings {
                    public void RegisterSettings() {
                        LiveSplit.AsrInterop.Core.UserSettings.AddBool(key: "key", description: "key", defaultValue: false);
                    }
                }
            }
            """;

        await new VerifyCs.Test
        {
            TestState =
            {
                Sources = { source },
                GeneratedSources =
                {
                    (
                        typeof(SettingsGenerator),
                        $"{fullName}.Impl.g.cs",
                        SourceText.From(expected, Encoding.UTF8, SourceHashAlgorithm.Sha256)
                    )
                }
            }
        }.RunAsync();
    }
}
